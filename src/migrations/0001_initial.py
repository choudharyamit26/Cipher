# Generated by Django 3.1.4 on 2021-01-20 06:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='first name', max_length=100)),
                ('country_code', models.CharField(default='+91', max_length=10)),
                ('phone_number', models.CharField(default='', max_length=13)),
                ('password', models.CharField(default='123456', max_length=100)),
                ('profile_pic', models.ImageField(blank=True, default='goku.jpg', null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=300)),
                ('number', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='')),
                ('validity', models.IntegerField()),
                ('mode', models.CharField(choices=[('Direct', 'Direct'), ('Everybody', 'Everybody'), ('Race', 'Race')], default='', max_length=100)),
                ('ques', models.TextField(default='')),
                ('ans', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_missed', models.BooleanField(default=False)),
                ('correct_attempts_by', models.ManyToManyField(blank=True, to='src.AppUser')),
                ('incorrect_attempts_by', models.ManyToManyField(blank=True, related_name='incorrect_attempts', to='src.AppUser')),
                ('read_by', models.ManyToManyField(blank=True, related_name='message_read_by', to='src.AppUser')),
                ('receiver', models.ManyToManyField(related_name='message_receiver', to='src.AppUser')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_sender', to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacts', models.ManyToManyField(to='src.Contact')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='UserCoins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_coins', models.IntegerField(default=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='SecretKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ques', models.TextField()),
                ('ans', models.TextField()),
                ('attachment', models.FileField(upload_to='')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.message')),
            ],
        ),
        migrations.CreateModel(
            name='IncorrectAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('message_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favourite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourite_user', to='src.appuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='AppNotificationSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='AppNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('mode', models.CharField(default='', max_length=100)),
                ('read', models.BooleanField(default=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.message')),
                ('sent_to', models.ManyToManyField(related_name='sent_to', to='src.AppUser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.appuser')),
            ],
        ),
    ]
